<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bupt.lams.mapper.AssetMapper">
    <resultMap id="BaseResultMap" type="com.bupt.lams.model.Asset">
        <id column="id" property="id"/>
        <result column="status" property="status"/>
        <result column="statusName" property="statusName"/>
        <result column="assetName" property="assetName"/>
        <result column="type" property="type"/>
        <result column="brand" property="brand"/>
        <result column="price" property="price"/>
        <result column="adv" property="adv" typeHandler="com.bupt.lams.mybatis.JsonToObjectTypeHandler"/>
        <result column="remark" property="remark"/>
        <result column="readyDate" property="readyDate"/>
        <result column="updateTime" property="updateTime"/>
        <collection property="fileList" javaType="arraylist" ofType="com.bupt.lams.model.AssetPic">
            <id column="pid" property="id"/>
            <result column="p_aid" property="aid"/>
            <result column="p_name" property="name"/>
            <result column="url" property="url"/>
            <result column="p_createTime" property="createTime"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, status, statusName, `type`, assetName, brand, price, adv, remark, readyDate, updateTime
  </sql>
    <sql id="baseInfoQuery">
        <if test="aid !=null">
            and a.id = #{aid}
        </if>
        <if test="status !=null">
            and a.status = #{status}
        </if>
        <if test="type !=null and type!=''">
            and a.type like concat('%',#{type},'%')
        </if>
        <if test="brand !=null and brand!=''">
            and a.brand like concat('%',#{brand},'%')
        </if>
        <if test="startDate !=null and endDate !=null">
            and a.readyDate between #{startDate} and #{endDate}
        </if>
        <if test="priceLow !=null and priceHigh !=null">
            and a.price between #{priceLow} and #{priceHigh}
        </if>
        <if test="assetStatuses != null">
            <choose>
                <when test="assetStatuses.size>0">
                    and a.status in
                    <foreach collection="assetStatuses" item="status" open="(" close=")" separator=",">
                        #{status}
                    </foreach>
                </when>
                <otherwise>
                    and a.status=-1
                </otherwise>
            </choose>
        </if>
        <if test="aids != null and aids.size>0">
            and a.id in
            <foreach collection="aids" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </sql>
    <select id="getAssetByCondition" parameterType="com.bupt.lams.dto.AssetQueryCondition" resultMap="BaseResultMap">
        select a.*,
        p.id as pid, p.aid as p_aid, p.name as p_name, p.createTime as p_createTime, p.*
        from
        asset a
        left join asset_pics p on a.id = p.aid
        <where>
            a.status != 5
            and a.status != 1
            <include refid="baseInfoQuery"/>
        </where>
        order by a.id
    </select>
    <select id="getTotalByCondition" parameterType="com.bupt.lams.dto.AssetQueryCondition" resultType="java.lang.Long">
        select count(*)
        from
        asset a
        <where>
            a.status != 5
            and a.status != 1
            <include refid="baseInfoQuery"/>
        </where>
    </select>
    <update id="updateAssetStatus" parameterType="com.bupt.lams.model.Asset">
        update asset a
        set
            a.status = #{status},
            a.statusName = #{statusName}
        where a.id = #{id}
    </update>
    <update id="updateAsset" parameterType="com.bupt.lams.model.Asset">
        update asset
        set
        <trim suffixOverrides=",">
            <if test="type != null and type != ''">
                `type` = #{type},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="statusName != null and statusName != ''">
                statusName = #{statusName},
            </if>
            <if test="assetName != null and assetName != ''">
                assetName = #{assetName},
            </if>
            <if test="brand != null and brand != ''">
                brand = #{brand},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="adv != null">
                adv = #{adv, typeHandler=com.bupt.lams.mybatis.JsonToObjectTypeHandler},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="readyDate != null">
                readyDate = #{readyDate},
            </if>
            updateTime = NOW()
        </trim>
        <where>
            id = #{id}
        </where>
    </update>
    <insert id="insertSelective" parameterType="com.bupt.lams.model.Asset" useGeneratedKeys="true" keyProperty="id">
        insert into asset
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="type != null and type != ''">
                `type`,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="statusName != null and statusName != ''">
                statusName,
            </if>
            <if test="assetName != null and assetName != ''">
                assetName,
            </if>
            <if test="brand != null and brand != ''">
                brand,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="adv != null">
                adv,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
            <if test="readyDate != null">
                readyDate,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="type != null and type != ''">
                #{type},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="statusName != null and statusName != ''">
                #{statusName},
            </if>
            <if test="assetName != null and assetName != ''">
                #{assetName},
            </if>
            <if test="brand != null and brand != ''">
                #{brand},
            </if>
            <if test="price != null">
                #{price},
            </if>
            <if test="adv != null">
                #{adv, typeHandler=com.bupt.lams.mybatis.JsonToObjectTypeHandler},
            </if>
            <if test="remark != null and remark != ''">
                #{remark},
            </if>
            <if test="readyDate != null">
                #{readyDate},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
        </trim>
    </insert>
    <select id="getAssetById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * from asset
        where id = #{aid}
    </select>
    <select id="getAssetStatusCount" parameterType="list" resultType="com.bupt.lams.dto.AssetStatusCount">
        select count(id) as count, cast(sum(price) as decimal (19,2)) as money, status, statusName
        from asset
        where status in (2, 3, 4, 6)
        <if test="list != null and list.size>0">
            and type in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        group by status, statusName;
    </select>
    <select id="getAssetTypeCount" resultType="com.bupt.lams.dto.AssetStatusCount">
        select count(id) as count, `type`
        from asset
        where status in (2, 3, 4, 6)
        group by `type`;
    </select>
    <select id="getLineData" resultType="com.bupt.lams.dto.AssetStatusCount">
        select count(id) as count, status, statusName, DATE_FORMAT(readyDate,'%Y-%m') `date`
        from asset
        where status in (2, 3, 6)
        <if test="monthScope !=null">
            and readyDate between #{monthScope[0]} and #{monthScope[1]}
        </if>
        group by status, statusName, `date`
    </select>
    <select id="getTotalLineData" resultType="com.bupt.lams.dto.AssetStatusCount">
        select count(id) as count, DATE_FORMAT(readyDate,'%Y-%m') date
        from asset
        where status in (2, 3, 6)
        <if test="monthScope !=null">
            and readyDate between #{monthScope[0]} and #{monthScope[1]}
        </if>
        group by date;
    </select>
    <select id="getAliveAssetTotalMoney" resultType="java.lang.Double">
        select cast(sum(price) as decimal (19,2))
        from asset
        where status in (2, 3, 6);
    </select>
    <select id="getAllAssetIds" resultType="java.lang.Long">
        select id
        from asset
    </select>
    <select id="getAssetInfoByIds" parameterType="list" resultMap="BaseResultMap">
        select a.*,
        p.id as pid, p.aid as p_aid, p.name as p_name, p.createTime as p_createTime, p.*
        from
        asset a
        left join asset_pics p on a.id = p.aid
        where 1=1
        <if test="list != null and list.size>0">
            and a.id in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        order by a.id
    </select>
    <delete id="deleteManyByAids" parameterType="list">
        delete
        from asset
        where
        id in
        <foreach collection="list" close=")" open="(" separator="," item="item">
            #{item}
        </foreach>
    </delete>
    <delete id="clearAssets">
        delete a.*
        from asset a
         left join order_asset oa on oa.aid = a.id
         left join `order` o on oa.oid = o.id
        where oid is null;
    </delete>
</mapper>