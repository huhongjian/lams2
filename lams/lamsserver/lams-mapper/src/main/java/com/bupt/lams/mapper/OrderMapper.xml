<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bupt.lams.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.bupt.lams.model.Order">
        <id column="id" property="id"/>
        <result column="category" property="category"/>
        <result column="categoryName" property="categoryName"/>
        <result column="status" property="status"/>
        <result column="statusName" property="statusName"/>
        <result column="duration" property="duration"/>
        <result column="reason" property="reason"/>
        <result column="userEmail" property="userEmail"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
    </resultMap>
    <resultMap id="AllOrderInfo" type="com.bupt.lams.model.Order" extends="BaseResultMap">
        <association property="user" javaType="com.bupt.lams.model.LamsUser">
            <id column="uid" property="id"/>
            <result column="name" property="name"/>
            <result column="phone" property="phone"/>
            <result column="username" property="username"/>
        </association>
        <association property="asset" javaType="com.bupt.lams.model.Asset">
            <id column="aid" property="id"/>
            <result column="type" property="type"/>
            <result column="brand" property="brand"/>
            <result column="price" property="price"/>
            <result column="adv" property="adv" typeHandler="com.bupt.lams.mybatis.JsonToObjectTypeHandler"/>
            <result column="readyDate" property="readyDate"/>
            <result column="updateTime" property="updateTime"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
    id, category, categoryName, status, statusName, duration, reason, userEmail, createTime, updateTime
    </sql>
    <sql id="baseInfoQuery">
        <if test="oid !=null">
            and o.id = #{oid}
        </if>
        <if test="category !=null">
            and o.category = #{category}
        </if>
        <if test="status !=null">
            and o.status = #{status}
        </if>
        <if test="userEmail !=null and userEmail!=''">
            and o.userEmail like concat('%',#{userEmail},'%')
        </if>
        <if test="type !=null and type!=''">
            and a.type like concat('%',#{type},'%')
        </if>
        <if test="brand !=null and brand!=''">
            and a.brand like concat('%',#{brand},'%')
        </if>
        <if test="beginDateScope !=null">
            and o.createTime between #{beginDateScope[0]} and #{beginDateScope[1]}
        </if>
        <if test="ids != null">
            <choose>
                <when test="ids.size>0">
                    and o.id in
                    <foreach collection="ids" item="id" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </when>
                <otherwise>
                    and o.id=-1
                </otherwise>
            </choose>
        </if>
        <if test="priceLow !=null and priceHigh !=null">
            and a.price between #{priceLow} and #{priceHigh}
        </if>
    </sql>
    <select id="getOrderByPage" resultMap="AllOrderInfo">
        select o.*,
        a.id as aid,a.type,a.brand,a.price,a.adv,a.readyDate,
        u.id as uid, u.name, u.phone, u.username
        from
        `order` o,
        order_asset oa,
        asset a,
        lams_user u
        <where>
            o.id = oa.oid
            and a.id = oa.aid
            and o.userEmail = u.username
            and u.enabled = 1
            <if test="order!=null">
                <if test="order.id !=null">
                    and o.id = #{order.id}
                </if>
                <if test="order.category !=null">
                    and o.category = #{order.category}
                </if>
                <if test="order.status !=null">
                    and o.status = #{order.status}
                </if>
                <if test="order.userEmail !=null and order.userEmail!=''">
                    and o.userEmail like concat('%',#{order.userEmail},'%')
                </if>
                <if test="order.asset!=null">
                    <if test="order.asset.type !=null and order.asset.type!=''">
                        and a.type like concat('%',#{order.asset.type},'%')
                    </if>
                    <if test="order.asset.brand !=null and order.asset.brand!=''">
                        and a.brand like concat('%',#{order.asset.brand},'%')
                    </if>
                </if>
            </if>
            <if test="beginDateScope !=null">
                and o.createTime between #{beginDateScope[0]} and #{beginDateScope[1]}
            </if>
            <if test="priceLow !=null and priceHigh !=null">
                and a.price between #{priceLow} and #{priceHigh}
            </if>
        </where>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from `order` o
        <where>
            <if test="order!=null">
                <if test="order.category !=null and order.category!=''">
                    and o.category = #{order.category}
                </if>
                <if test="order.status !=null and order.status!=''">
                    and o.status like concat('%',#{order.status},'%')
                </if>
                <if test="order.userEmail !=null and order.userEmail!=''">
                    and o.userEmail like concat('%',#{order.userEmail},'%')
                </if>
            </if>
            <if test="beginDateScope !=null">
                and o.createTime between #{beginDateScope[0]} and #{beginDateScope[1]}
            </if>
        </where>
    </select>
    <select id="getTotalByCondition" parameterType="com.bupt.lams.dto.OrderQueryCondition" resultType="java.lang.Long">
        select count(*)
        from
        `order` o,
        order_asset oa,
        asset a,
        lams_user u
        <where>
            o.id = oa.oid
            and a.id = oa.aid
            and o.userEmail = u.username
            and u.enabled = 1
            <include refid="baseInfoQuery"/>
        </where>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from `order`
        where id = #{id}
    </select>
    <update id="updateOrderStatusById" parameterType="com.bupt.lams.model.Order">
        update `order` o
        set
            o.status = #{status},
            o.statusName = #{statusName}
        where o.id = #{id}
    </update>
    <update id="updateOrder" parameterType="com.bupt.lams.model.Order">
        update `order`
        set
        <if test="category !=null">
            category = #{category},
        </if>
        <if test="categoryName !=null and categoryName!=''">
            categoryName = #{categoryName},
        </if>
        <if test="status != null">
            status = #{status},
        </if>
        <if test="statusName !=null and statusName!=''">
            statusName = #{statusName},
        </if>
        <if test="duration != null">
            duration = #{duration},
        </if>
        <if test="reason != null and reason!=''">
            reason = #{reason},
        </if>
        <if test="userEmail != null and userEmail!=''">
            userEmail = #{userEmail},
        </if>
        <if test="createTime != null">
            createTime = #{createTime},
        </if>
        updateTime = NOW()
        <where>
            id = #{id}
        </where>
    </update>
    <insert id="insertSelective" parameterType="com.bupt.lams.model.Order" useGeneratedKeys="true" keyProperty="id">
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="category !=null">
                category,
            </if>
            <if test="categoryName !=null and categoryName!=''">
                categoryName,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="statusName !=null and statusName!=''">
                statusName,
            </if>
            <if test="duration != null">
                duration,
            </if>
            <if test="reason != null and reason!=''">
                reason,
            </if>
            <if test="userEmail != null and userEmail!=''">
                userEmail,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="category != null">
                #{category},
            </if>
            <if test="categoryName !=null and categoryName!=''">
                #{categoryName},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="statusName !=null and statusName!=''">
                #{statusName},
            </if>
            <if test="duration != null">
                #{duration},
            </if>
            <if test="reason != null and reason!=''">
                #{reason},
            </if>
            <if test="userEmail != null and userEmail!=''">
                #{userEmail},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
        </trim>
    </insert>
    <delete id="deleteManyByOids" parameterType="list">
        delete
        from `order`
        where
        id in
        <foreach collection="list" close=")" open="(" separator="," item="item">
            #{item}
        </foreach>
    </delete>
    <select id="getOrderByCondition" parameterType="com.bupt.lams.dto.OrderQueryCondition" resultMap="AllOrderInfo">
        select o.*,
        a.id as aid,a.type,a.brand,a.price,a.adv,a.readyDate,
        u.id as uid, u.name, u.phone, u.username
        from
        `order` o,
        order_asset oa,
        asset a,
        lams_user u
        <where>
            o.id = oa.oid
            and a.id = oa.aid
            and o.userEmail = u.username
            and u.enabled = 1
            <include refid="baseInfoQuery"/>
        </where>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>
</mapper>