<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bupt.lams.mapper.PurchaseOrderMapper">
    <resultMap id="BaseResultMap" type="com.bupt.lams.model.PurchaseOrder">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="total" property="total"/>
        <result column="discount" property="discount"/>
        <result column="pay" property="pay"/>
        <result column="purchaseDate" property="purchaseDate"/>
        <result column="hasInvoice" property="hasInvoice"/>
        <result column="invoiceDate" property="invoiceDate"/>
        <result column="remark" property="remark"/>
        <result column="creatorEmail" property="creatorEmail"/>
        <result column="updaterEmail" property="updaterEmail"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
    </resultMap>
    <resultMap id="AllPurchaseOrderInfo" type="com.bupt.lams.model.PurchaseOrder" extends="BaseResultMap">
        <association property="creator" javaType="com.bupt.lams.model.LamsUser">
            <id column="creator_id" property="id"/>
            <result column="creator_name" property="name"/>
            <result column="creator_phone" property="phone"/>
            <result column="creator_username" property="username"/>
            <result column="creator_enabled" property="enabled"/>
            <result column="creator_remark" property="remark"/>
        </association>
        <association property="updater" javaType="com.bupt.lams.model.LamsUser">
            <id column="updater_id" property="id"/>
            <result column="updater_name" property="name"/>
            <result column="updater_phone" property="phone"/>
            <result column="updater_username" property="username"/>
            <result column="updater_enabled" property="enabled"/>
            <result column="updater_remark" property="remark"/>
        </association>
        <collection property="assetList" javaType="arraylist" ofType="com.bupt.lams.model.Asset">
            <id column="aid" property="id"/>
            <result column="a_status" property="status"/>
            <result column="a_statusName" property="statusName"/>
            <result column="assetName" property="assetName"/>
            <result column="type" property="type"/>
            <result column="brand" property="brand"/>
            <result column="price" property="price"/>
            <result column="remark" property="remark"/>
            <result column="adv" property="adv" typeHandler="com.bupt.lams.mybatis.JsonToObjectTypeHandler"/>
            <result column="boughtTime" property="boughtTime"/>
            <result column="readyDate" property="readyDate"/>
            <result column="a_updateTime" property="updateTime"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, `name`, total, discount, pay, purchaseDate, hasInvoice, invoiceDate, remark, creatorEmail, updaterEmail, createTime, updateTime
  </sql>
    <sql id="baseInfoQuery">
        <if test="poid !=null">
            and po.id = #{poid}
        </if>
        <if test="name !=null and name!=''">
            and po.name like concat('%',#{name},'%')
        </if>
        <if test="hasInvoice !=null">
            and po.hasInvoice = #{hasInvoice}
        </if>
        <if test="creatorEmail !=null and creatorEmail!=''">
            and po.creatorEmail like concat('%',#{creatorEmail},'%')
        </if>
        <if test="totalLow !=null and totalHigh !=null">
            and po.total between #{totalLow} and #{totalHigh}
        </if>
        <if test="payLow !=null and payHigh !=null">
            and po.pay between #{payLow} and #{payHigh}
        </if>
        <if test="startDateForPurchase !=null and endDateForPurchase !=null">
            and po.purchaseDate between #{startDateForPurchase} and #{endDateForPurchase}
        </if>
        <if test="startDateForInvoice !=null and endDateForInvoice !=null">
            and po.invoiceDate between #{startDateForInvoice} and #{endDateForInvoice}
        </if>
    </sql>
    <select id="getPurchaseOrderByCondition" parameterType="com.bupt.lams.dto.PurchaseQueryCondition"
            resultMap="AllPurchaseOrderInfo">
        select
        po.*,
        a.id as aid, a.status as a_status, a.statusName as a_statusName, a.updateTime as a_updateTime, a.*,
        c.id as creator_id, c.name as creator_name, c.phone as creator_phone, c.username as creator_username, c.enabled
        as creator_enabled, c.remark as creator_remark,
        u.id as updater_id, u.name as updater_name, u.phone as updater_phone, u.username as updater_username, u.enabled
        as updater_enabled, u.remark as updater_remark
        from
        purchase_orders po
        left join purchase_asset pa on po.id = pa.poid
        left join asset a on a.id = pa.aid
        left join lams_user c on c.username = po.creatorEmail
        left join lams_user u on u.username = po.updaterEmail
        <where>
            <include refid="baseInfoQuery"/>
        </where>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getTotalByCondition" parameterType="com.bupt.lams.dto.PurchaseQueryCondition"
            resultType="java.lang.Long">
        select count(*)
        from
        purchase_orders po
        <where>
            <include refid="baseInfoQuery"/>
        </where>
    </select>
    <select id="selectByPrimaryKey" resultType="com.bupt.lams.model.PurchaseOrder" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from record
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from record
    where id = #{id}
  </delete>
    <insert id="insertSelective" parameterType="com.bupt.lams.model.PurchaseOrder" useGeneratedKeys="true"
            keyProperty="id">
        insert into purchase_orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                `name`,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="discount != null">
                discount,
            </if>
            <if test="pay != null">
                pay,
            </if>
            <if test="purchaseDate != null">
                purchaseDate,
            </if>
            <if test="hasInvoice != null">
                hasInvoice,
            </if>
            <if test="invoiceDate != null">
                invoiceDate,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
            <if test="creatorEmail != null and creatorEmail != ''">
                creatorEmail,
            </if>
            <if test="updaterEmail != null and updaterEmail != ''">
                updaterEmail,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            updateTime
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="total != null">
                #{total},
            </if>
            <if test="discount != null">
                #{discount},
            </if>
            <if test="pay != null">
                #{pay},
            </if>
            <if test="purchaseDate != null">
                #{purchaseDate},
            </if>
            <if test="hasInvoice != null">
                #{hasInvoice},
            </if>
            <if test="invoiceDate != null">
                #{invoiceDate},
            </if>
            <if test="remark != null and remark != ''">
                #{remark},
            </if>
            <if test="creatorEmail != null and creatorEmail != ''">
                #{creatorEmail},
            </if>
            <if test="updaterEmail != null and updaterEmail != ''">
                #{updaterEmail},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            now()
        </trim>
    </insert>
</mapper>